{
  "address": "0x7B3BA709332365Bc7636aB91c7C271CC8f26bb0A",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InsufficientFunds",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "InvalidArguments",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "worldContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "GameJoined",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "worldContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "GameLeft",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "worldContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "reviewer",
          "type": "address"
        }
      ],
      "name": "GameReviewed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "worldContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "gameMaster",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "name": "GameScheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "worldContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        }
      ],
      "name": "GameStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "worldContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "PlayerJoinedWorld",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "worldCreator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "worldContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "vibe",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "gameMasterName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "gameMasterTwitterHandle",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "WorldCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "vibe",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "gameMasterName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "gameMasterTwitterHandle",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "createWorld",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWorlds",
      "outputs": [
        {
          "internalType": "contract World[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "worldIndex",
          "type": "uint256"
        }
      ],
      "name": "joinWorldAsGM",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "worldIndex",
          "type": "uint256"
        }
      ],
      "name": "joinWorldAsPlayer",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceToCreate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceToJoinGM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceToJoinPlayer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "worlds",
      "outputs": [
        {
          "internalType": "contract World",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x976dfc2b2e3de61e3f7716b2720f0045d1fef7ce7555950cedf57f6f169dcb17",
  "receipt": {
    "to": null,
    "from": "0xD10F43A0aa00D244DAcFBE3C49b9B918B717Ff2c",
    "contractAddress": "0x7B3BA709332365Bc7636aB91c7C271CC8f26bb0A",
    "transactionIndex": 3,
    "gasUsed": "1566401",
    "logsBloom": "0x
    "blockHash": "0x69dedcc9948f4501f3d1bd019a00a08aa42511de0ce74240f6ca14a0aecc1ea2",
    "transactionHash": "0x976dfc2b2e3de61e3f7716b2720f0045d1fef7ce7555950cedf57f6f169dcb17",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 7825360,
        "transactionHash": "0x976dfc2b2e3de61e3f7716b2720f0045d1fef7ce7555950cedf57f6f169dcb17",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000d10f43a0aa00d244dacfbe3c49b9b918b717ff2c",
          "0x00000000000000000000000002f615e95563ef16f10354dba9e584e58d2d4314"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000858f33ac56f00000000000000000000000000000000000000000000000000034fc1a3498fb72d00000000000000000000000000000000000000000000001ebc0f35eac36aa735000000000000000000000000000000000000000000000000034768b00eca482d00000000000000000000000000000000000000000000001ebc178eddfe301635",
        "logIndex": 19,
        "blockHash": "0x69dedcc9948f4501f3d1bd019a00a08aa42511de0ce74240f6ca14a0aecc1ea2"
      }
    ],
    "blockNumber": 7825360,
    "cumulativeGasUsed": "2594845",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "f89e6a6584fc0c232759ee564a15bb97",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"InvalidArguments\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"worldContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"GameJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"worldContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"GameLeft\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"worldContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"reviewer\",\"type\":\"address\"}],\"name\":\"GameReviewed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"worldContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"gameMaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"GameScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"worldContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"GameStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"worldContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"PlayerJoinedWorld\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"worldCreator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"worldContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"vibe\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"gameMasterName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"gameMasterTwitterHandle\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"WorldCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"vibe\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gameMasterName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gameMasterTwitterHandle\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"createWorld\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWorlds\",\"outputs\":[{\"internalType\":\"contract World[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"worldIndex\",\"type\":\"uint256\"}],\"name\":\"joinWorldAsGM\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"worldIndex\",\"type\":\"uint256\"}],\"name\":\"joinWorldAsPlayer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceToCreate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceToJoinGM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceToJoinPlayer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"worlds\",\"outputs\":[{\"internalType\":\"contract World\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createWorld(string,string,string,string)\":{\"details\":\"Function to create a world\",\"params\":{\"description\":\"The description of the world\",\"gameMasterName\":\"The name of the game master\",\"gameMasterTwitterHandle\":\"The Twitter handle of the game master\",\"vibe\":\"The vibe of the world\"}},\"getWorlds()\":{\"details\":\"Function to get the worlds\"},\"joinWorldAsGM(uint256)\":{\"details\":\"Function for a GM to join a world\",\"params\":{\"worldIndex\":\"The index of the world to join\"}},\"joinWorldAsPlayer(uint256)\":{\"details\":\"Function for a player to join a world\",\"params\":{\"worldIndex\":\"The index of the world to join\"}},\"withdrawFunds()\":{\"details\":\"Function to withdraw the balance\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WorldFactory.sol\":\"WorldFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/World.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\ncontract World {\\n    struct Game {\\n        address gameMaster;\\n        uint256 startTime;\\n        uint256 endTime;\\n        address[] players;\\n        mapping(address => bool) isPlayer;\\n    }\\n\\n    string public vibe;\\n    string public gameMasterName;\\n    string public gameMasterTwitterHandle;\\n    string public description;\\n    uint256 public creationTime;\\n    address public worldCreator;\\n    uint256 public treasuryBalance;\\n\\n    uint256 public gameCount;\\n    mapping(uint256 => Game) public games;\\n    \\n    event WorldUpdated(string vibe, string gameMasterName, string gameMasterTwitterHandle, string description);\\n    event GameCreated(uint256 gameId, address gameMaster, uint256 startTime, uint256 endTime);\\n    event PlayerJoined(uint256 gameId, address player);\\n    event PlayerApproved(uint256 gameId, address player);\\n\\n    constructor(\\n        string memory _vibe,\\n        string memory _gameMasterName,\\n        string memory _gameMasterTwitterHandle,\\n        string memory _description,\\n        address _worldCreator\\n    ) {\\n        vibe = _vibe;\\n        gameMasterName = _gameMasterName;\\n        gameMasterTwitterHandle = _gameMasterTwitterHandle;\\n        description = _description;\\n        creationTime = block.timestamp;\\n        worldCreator = _worldCreator;\\n    }\\n\\n    modifier onlyGameMaster(uint256 gameId) {\\n        require(msg.sender == games[gameId].gameMaster, \\\"Not the game master\\\");\\n        _;\\n    }\\n\\n    function createGame(uint256 startTime, uint256 endTime) public {\\n        games[gameCount].gameMaster = msg.sender;\\n        games[gameCount].startTime = startTime;\\n        games[gameCount].endTime = endTime;\\n        gameCount++;\\n\\n        emit GameCreated(gameCount - 1, msg.sender, startTime, endTime);\\n    }\\n\\n    function joinGame(uint256 gameId) public payable {\\n        require(gameId < gameCount, \\\"Game does not exist\\\");\\n        require(msg.value >= 1 ether, \\\"Insufficient stake\\\");\\n\\n        games[gameId].players.push(msg.sender);\\n        games[gameId].isPlayer[msg.sender] = true;\\n        treasuryBalance += msg.value;\\n\\n        emit PlayerJoined(gameId, msg.sender);\\n    }\\n\\n    function approvePlayer(uint256 gameId, address player) public onlyGameMaster(gameId) {\\n        require(games[gameId].isPlayer[player], \\\"Player not in the game\\\");\\n\\n        // Additional logic to approve player if needed\\n        emit PlayerApproved(gameId, player);\\n    }\\n\\n    function updateDescription(string memory _description) public {\\n        require(msg.sender == worldCreator, \\\"Operation not allowed\\\");\\n        description = _description;\\n        emit WorldUpdated(vibe, gameMasterName, gameMasterTwitterHandle, description);\\n    }\\n}\\n\",\"keccak256\":\"0x26f9c693e28d17af6f0f6fd52b2f01da4b0185f348ee39ec144cf97407b0e25c\",\"license\":\"MIT\"},\"contracts/WorldFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\nimport \\\"./World.sol\\\";\\n\\ncontract WorldFactory {\\n    address public owner;\\n    uint256 public priceToCreate;\\n    uint256 public priceToJoinGM;\\n    uint256 public priceToJoinPlayer;\\n    World[] public worlds;\\n\\n    error InsufficientFunds();\\n    error InvalidArguments(string message);\\n    error OnlyOwner();\\n\\n    event WorldCreated(address indexed worldCreator, address worldContract, uint256 time, string vibe, string gameMasterName, string gameMasterTwitterHandle, string description);\\n    event PlayerJoinedWorld(address indexed worldContract, address player);\\n    event GameScheduled(address indexed worldContract, uint256 gameId, address gameMaster, uint256 startTime, uint256 endTime);\\n    event GameStarted(address indexed worldContract, uint256 gameId);\\n    event GameJoined(address indexed worldContract, uint256 gameId, address player);\\n    event GameLeft(address indexed worldContract, uint256 gameId, address player);\\n    event GameReviewed(address indexed worldContract, uint256 gameId, address reviewer);\\n\\n    constructor() {\\n        owner = msg.sender;\\n        priceToCreate = .1 ether;   // Example price to create a world\\n        priceToJoinGM = .05 ether;    // Example price for GM to join a world\\n        priceToJoinPlayer = .02 ether; // Example price for player to join a world\\n    }\\n\\n    /**\\n     * @dev Function to create a world\\n     * @param vibe The vibe of the world\\n     * @param gameMasterName The name of the game master\\n     * @param gameMasterTwitterHandle The Twitter handle of the game master\\n     * @param description The description of the world\\n     */\\n    function createWorld(\\n        string calldata vibe,\\n        string calldata gameMasterName,\\n        string calldata gameMasterTwitterHandle,\\n        string calldata description\\n    ) public payable {\\n        if (msg.value < priceToCreate) {\\n            revert InsufficientFunds();\\n        }\\n\\n        World world = new World(vibe, gameMasterName, gameMasterTwitterHandle, description, msg.sender);\\n        worlds.push(world);\\n\\n        emit WorldCreated(msg.sender, address(world), block.timestamp, vibe, gameMasterName, gameMasterTwitterHandle, description);\\n    }\\n\\n    /**\\n     * @dev Function for a GM to join a world\\n     * @param worldIndex The index of the world to join\\n     */\\n    function joinWorldAsGM(uint256 worldIndex) public payable {\\n        if (worldIndex >= worlds.length) {\\n            revert InvalidArguments(\\\"World does not exist\\\");\\n        }\\n        if (msg.value < priceToJoinGM) {\\n            revert InsufficientFunds();\\n        }\\n\\n        World world = worlds[worldIndex];\\n        payable(world.worldCreator()).transfer(priceToJoinGM / 2);\\n        payable(address(world)).transfer(priceToJoinGM / 2);\\n\\n        emit PlayerJoinedWorld(address(world), msg.sender);\\n    }\\n\\n    /**\\n     * @dev Function for a player to join a world\\n     * @param worldIndex The index of the world to join\\n     */\\n    function joinWorldAsPlayer(uint256 worldIndex) public payable {\\n        if (worldIndex >= worlds.length) {\\n            revert InvalidArguments(\\\"World does not exist\\\");\\n        }\\n        if (msg.value < priceToJoinPlayer) {\\n            revert InsufficientFunds();\\n        }\\n\\n        World world = worlds[worldIndex];\\n        payable(world.worldCreator()).transfer(priceToJoinPlayer / 2);\\n        payable(address(world)).transfer(priceToJoinPlayer / 2);\\n\\n        emit PlayerJoinedWorld(address(world), msg.sender);\\n    }\\n\\n    /**\\n     * @dev Function to withdraw the balance\\n     */\\n    function withdrawFunds() public {\\n        if (msg.sender != owner) {\\n            revert OnlyOwner();\\n        }\\n\\n        if (address(this).balance == 0) {\\n            revert InsufficientFunds();\\n        }\\n\\n        (bool sent,) = owner.call{value: address(this).balance}(\\\"\\\");\\n        require(sent, \\\"Failed to send Ether\\\");\\n    }\\n\\n    /**\\n     * @dev Function to get the worlds\\n     */\\n    function getWorlds() public view returns (World[] memory) {\\n        return worlds;\\n    }\\n\\n    /**\\n     * @dev Receive function to accept ether\\n     */\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0x0b22641d2ec1706ae9dc3b8230dc1568f69aeb4d0e61a8dac0124922c88cc359\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163317905567016345785d8a000060015566b1a2bc2ec5000060025566470de4df8200006003556119cd806100546000396000f3fe608060405260043610620000a15760003560e01c80633cab190c11620000605780633cab190c146200016f5780637be9ed43146200018657806381e2e68b146200019d5780638da5cb5b14620001b5578063bbd2ad2114620001d757600080fd5b806305afb87214620000ae57806324600fc314620000d957806327eed85714620000f35780632af84af0146200010a5780633a1956ce146200013157600080fd5b36620000a957005b600080fd5b348015620000bb57600080fd5b50620000c660035481565b6040519081526020015b60405180910390f35b348015620000e657600080fd5b50620000f1620001ef565b005b620000f162000104366004620007c7565b620002e2565b3480156200011757600080fd5b5062000122620004b0565b604051620000d09190620007e1565b3480156200013e57600080fd5b506200015662000150366004620007c7565b62000514565b6040516001600160a01b039091168152602001620000d0565b620000f1620001803660046200087c565b6200053f565b620000f162000197366004620007c7565b62000655565b348015620001aa57600080fd5b50620000c660015481565b348015620001c257600080fd5b5060005462000156906001600160a01b031681565b348015620001e457600080fd5b50620000c660025481565b6000546001600160a01b031633146200021b57604051635fc483c560e01b815260040160405180910390fd5b476000036200023d5760405163356680b760e01b815260040160405180910390fd5b600080546040516001600160a01b039091169047908381818185875af1925050503d80600081146200028c576040519150601f19603f3d011682016040523d82523d6000602084013e62000291565b606091505b5050905080620002df5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064015b60405180910390fd5b50565b60045481106200032d57604051630aec738560e11b815260206004820152601460248201527315dbdc9b1908191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401620002d6565b600254341015620003515760405163356680b760e01b815260040160405180910390fd5b6000600482815481106200036957620003696200094d565b60009182526020918290200154604080516315c0a24360e11b815290516001600160a01b0390921693508392632b814486926004808401938290030181865afa158015620003bb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003e1919062000963565b6001600160a01b03166108fc60028054620003fd919062000995565b6040518115909202916000818181858888f1935050505015801562000426573d6000803e3d6000fd5b50806001600160a01b03166108fc6002805462000444919062000995565b6040518115909202916000818181858888f193505050501580156200046d573d6000803e3d6000fd5b506040513381526001600160a01b038216907f04a5b0161c1762cee3f2efe1acd03f937f91329fa0d9ca671e721f026e8e1f909060200160405180910390a25050565b606060048054806020026020016040519081016040528092919081815260200182805480156200050a57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620004eb575b5050505050905090565b600481815481106200052557600080fd5b6000918252602090912001546001600160a01b0316905081565b600154341015620005635760405163356680b760e01b815260040160405180910390fd5b60008888888888888888336040516200057c90620007b9565b6200059099989796959493929190620009e1565b604051809103906000f080158015620005ad573d6000803e3d6000fd5b50600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b03831617905560405190915033907fce7f7a585e3fa234eb3de402c2c6a7585eff379a87f9d73e3f17632ece3221a3906200064290849042908e908e908e908e908e908e908e908e9062000a59565b60405180910390a2505050505050505050565b6004548110620006a057604051630aec738560e11b815260206004820152601460248201527315dbdc9b1908191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401620002d6565b600354341015620006c45760405163356680b760e01b815260040160405180910390fd5b600060048281548110620006dc57620006dc6200094d565b60009182526020918290200154604080516315c0a24360e11b815290516001600160a01b0390921693508392632b814486926004808401938290030181865afa1580156200072e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000754919062000963565b6001600160a01b03166108fc600260035462000771919062000995565b6040518115909202916000818181858888f193505050501580156200079a573d6000803e3d6000fd5b50806001600160a01b03166108fc600260035462000444919062000995565b610ec08062000ad883390190565b600060208284031215620007da57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015620008245783516001600160a01b031683529284019291840191600101620007fd565b50909695505050505050565b60008083601f8401126200084357600080fd5b50813567ffffffffffffffff8111156200085c57600080fd5b6020830191508360208285010111156200087557600080fd5b9250929050565b6000806000806000806000806080898b0312156200089957600080fd5b883567ffffffffffffffff80821115620008b257600080fd5b620008c08c838d0162000830565b909a50985060208b0135915080821115620008da57600080fd5b620008e88c838d0162000830565b909850965060408b01359150808211156200090257600080fd5b620009108c838d0162000830565b909650945060608b01359150808211156200092a57600080fd5b50620009398b828c0162000830565b999c989b5096995094979396929594505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156200097657600080fd5b81516001600160a01b03811681146200098e57600080fd5b9392505050565b600082620009b357634e487b7160e01b600052601260045260246000fd5b500490565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60a081526000620009f760a083018b8d620009b8565b828103602084015262000a0c818a8c620009b8565b9050828103604084015262000a2381888a620009b8565b9050828103606084015262000a3a818688620009b8565b91505060018060a01b03831660808301529a9950505050505050505050565b60018060a01b038b16815289602082015260c06040820152600062000a8360c083018a8c620009b8565b828103606084015262000a9881898b620009b8565b9050828103608084015262000aaf818789620009b8565b905082810360a084015262000ac6818587620009b8565b9d9c5050505050505050505050505056fe60806040523480156200001157600080fd5b5060405162000ec038038062000ec0833981016040819052620000349162000164565b6000620000428682620002d0565b506001620000518582620002d0565b506002620000608482620002d0565b5060036200006f8382620002d0565b5042600455600580546001600160a01b0319166001600160a01b0392909216919091179055506200039c92505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000c757600080fd5b81516001600160401b0380821115620000e457620000e46200009f565b604051601f8301601f19908116603f011681019082821181831017156200010f576200010f6200009f565b816040528381526020925086838588010111156200012c57600080fd5b600091505b8382101562000150578582018301518183018401529082019062000131565b600093810190920192909252949350505050565b600080600080600060a086880312156200017d57600080fd5b85516001600160401b03808211156200019557600080fd5b620001a389838a01620000b5565b96506020880151915080821115620001ba57600080fd5b620001c889838a01620000b5565b95506040880151915080821115620001df57600080fd5b620001ed89838a01620000b5565b945060608801519150808211156200020457600080fd5b506200021388828901620000b5565b608088015190935090506001600160a01b03811681146200023357600080fd5b809150509295509295909350565b600181811c908216806200025657607f821691505b6020821081036200027757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002cb57600081815260208120601f850160051c81016020861015620002a65750805b601f850160051c820191505b81811015620002c757828155600101620002b2565b5050505b505050565b81516001600160401b03811115620002ec57620002ec6200009f565b6200030481620002fd845462000241565b846200027d565b602080601f8311600181146200033c5760008415620003235750858301515b600019600386901b1c1916600185901b178555620002c7565b600085815260208120601f198616915b828110156200036d578886015182559484019460019091019084016200034c565b50858210156200038c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610b1480620003ac6000396000f3fe6080604052600436106100c25760003560e01c80637284e4161161007f578063d8270dce11610059578063d8270dce14610237578063df630c221461024d578063e735b48a14610262578063efaa55a01461028257600080fd5b80637284e416146101ed578063bdc57eb614610202578063cdb4ae6b1461021757600080fd5b8063117a5b90146100c75780632192ed0a146101375780632b81448614610159578063313dab20146101915780634d1975b4146101b557806360104cef146101cb575b600080fd5b3480156100d357600080fd5b5061010d6100e23660046106d9565b6008602052600090815260409020805460018201546002909201546001600160a01b03909116919083565b604080516001600160a01b0390941684526020840192909252908201526060015b60405180910390f35b34801561014357600080fd5b5061014c610295565b60405161012e91906106f2565b34801561016557600080fd5b50600554610179906001600160a01b031681565b6040516001600160a01b03909116815260200161012e565b34801561019d57600080fd5b506101a760065481565b60405190815260200161012e565b3480156101c157600080fd5b506101a760075481565b3480156101d757600080fd5b506101eb6101e6366004610740565b610323565b005b3480156101f957600080fd5b5061014c6103c9565b34801561020e57600080fd5b5061014c6103d6565b34801561022357600080fd5b506101eb610232366004610762565b6103e3565b34801561024357600080fd5b506101a760045481565b34801561025957600080fd5b5061014c6104fa565b34801561026e57600080fd5b506101eb61027d3660046107b4565b610507565b6101eb6102903660046106d9565b6105aa565b600180546102a290610865565b80601f01602080910402602001604051908101604052809291908181526020018280546102ce90610865565b801561031b5780601f106102f05761010080835404028352916020019161031b565b820191906000526020600020905b8154815290600101906020018083116102fe57829003601f168201915b505050505081565b6007805460009081526008602052604080822080546001600160a01b03191633179055825482528082206001018590558254825281206002018390558154919061036c836108b5565b91905055507f7ed9b48d83e08a25a1572b27a365dfb386da7860c996e684e541e3433b79214760016007546103a191906108ce565b6040805191825233602083015281018490526060810183905260800160405180910390a15050565b600380546102a290610865565b600280546102a290610865565b60008281526008602052604090205482906001600160a01b031633146104465760405162461bcd60e51b81526020600482015260136024820152722737ba103a34329033b0b6b29036b0b9ba32b960691b60448201526064015b60405180910390fd5b60008381526008602090815260408083206001600160a01b038616845260040190915290205460ff166104b45760405162461bcd60e51b8152602060048201526016602482015275506c61796572206e6f7420696e207468652067616d6560501b604482015260640161043d565b604080518481526001600160a01b03841660208201527fb37b16260a425a6a2f954098958dc6b69c0ac58404fe84c6dde104d228523773910160405180910390a1505050565b600080546102a290610865565b6005546001600160a01b031633146105595760405162461bcd60e51b815260206004820152601560248201527413dc195c985d1a5bdb881b9bdd08185b1b1bddd959605a1b604482015260640161043d565b60036105658282610936565b507f506b34d832551ba78a10e88433d34e45760347a4201db44442d37d41d77469f0600060016002600360405161059f9493929190610a73565b60405180910390a150565b60075481106105f15760405162461bcd60e51b815260206004820152601360248201527211d85b5948191bd95cc81b9bdd08195e1a5cdd606a1b604482015260640161043d565b670de0b6b3a764000034101561063e5760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e74207374616b6560701b604482015260640161043d565b6000818152600860209081526040808320600381018054600181810183559186528486200180546001600160a01b03191633908117909155855260049091019092528220805460ff191690911790556006805434929061069f908490610acb565b9091555050604080518281523360208201527f87969bc7faf902221a147b95ceba76e011c5efb0339a0a8ee7a2bb82d9cfbbd6910161059f565b6000602082840312156106eb57600080fd5b5035919050565b600060208083528351808285015260005b8181101561071f57858101830151858201604001528201610703565b506000604082860101526040601f19601f8301168501019250505092915050565b6000806040838503121561075357600080fd5b50508035926020909101359150565b6000806040838503121561077557600080fd5b8235915060208301356001600160a01b038116811461079357600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156107c657600080fd5b813567ffffffffffffffff808211156107de57600080fd5b818401915084601f8301126107f257600080fd5b8135818111156108045761080461079e565b604051601f8201601f19908116603f0116810190838211818310171561082c5761082c61079e565b8160405282815287602084870101111561084557600080fd5b826020860160208301376000928101602001929092525095945050505050565b600181811c9082168061087957607f821691505b60208210810361089957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016108c7576108c761089f565b5060010190565b818103818111156108e1576108e161089f565b92915050565b601f82111561093157600081815260208120601f850160051c8101602086101561090e5750805b601f850160051c820191505b8181101561092d5782815560010161091a565b5050505b505050565b815167ffffffffffffffff8111156109505761095061079e565b6109648161095e8454610865565b846108e7565b602080601f83116001811461099957600084156109815750858301515b600019600386901b1c1916600185901b17855561092d565b600085815260208120601f198616915b828110156109c8578886015182559484019460019091019084016109a9565b50858210156109e65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008154610a0381610865565b808552602060018381168015610a205760018114610a3a57610a68565b60ff1985168884015283151560051b880183019550610a68565b866000528260002060005b85811015610a605781548a8201860152908301908401610a45565b890184019650505b505050505092915050565b608081526000610a8660808301876109f6565b8281036020840152610a9881876109f6565b90508281036040840152610aac81866109f6565b90508281036060840152610ac081856109f6565b979650505050505050565b808201808211156108e1576108e161089f56fea264697066735822122079e20b672c5610027be315e2b151880ab52ccda768fa188981e3d1a0f7940c8464736f6c63430008140033a26469706673582212207d98310ad139d621ef21a7fc6025632434a963d28484806130b07ddee7748acb64736f6c63430008140033",
  "deployedBytecode": "0x608060405260043610620000a15760003560e01c80633cab190c11620000605780633cab190c146200016f5780637be9ed43146200018657806381e2e68b146200019d5780638da5cb5b14620001b5578063bbd2ad2114620001d757600080fd5b806305afb87214620000ae57806324600fc314620000d957806327eed85714620000f35780632af84af0146200010a5780633a1956ce146200013157600080fd5b36620000a957005b600080fd5b348015620000bb57600080fd5b50620000c660035481565b6040519081526020015b60405180910390f35b348015620000e657600080fd5b50620000f1620001ef565b005b620000f162000104366004620007c7565b620002e2565b3480156200011757600080fd5b5062000122620004b0565b604051620000d09190620007e1565b3480156200013e57600080fd5b506200015662000150366004620007c7565b62000514565b6040516001600160a01b039091168152602001620000d0565b620000f1620001803660046200087c565b6200053f565b620000f162000197366004620007c7565b62000655565b348015620001aa57600080fd5b50620000c660015481565b348015620001c257600080fd5b5060005462000156906001600160a01b031681565b348015620001e457600080fd5b50620000c660025481565b6000546001600160a01b031633146200021b57604051635fc483c560e01b815260040160405180910390fd5b476000036200023d5760405163356680b760e01b815260040160405180910390fd5b600080546040516001600160a01b039091169047908381818185875af1925050503d80600081146200028c576040519150601f19603f3d011682016040523d82523d6000602084013e62000291565b606091505b5050905080620002df5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064015b60405180910390fd5b50565b60045481106200032d57604051630aec738560e11b815260206004820152601460248201527315dbdc9b1908191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401620002d6565b600254341015620003515760405163356680b760e01b815260040160405180910390fd5b6000600482815481106200036957620003696200094d565b60009182526020918290200154604080516315c0a24360e11b815290516001600160a01b0390921693508392632b814486926004808401938290030181865afa158015620003bb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003e1919062000963565b6001600160a01b03166108fc60028054620003fd919062000995565b6040518115909202916000818181858888f1935050505015801562000426573d6000803e3d6000fd5b50806001600160a01b03166108fc6002805462000444919062000995565b6040518115909202916000818181858888f193505050501580156200046d573d6000803e3d6000fd5b506040513381526001600160a01b038216907f04a5b0161c1762cee3f2efe1acd03f937f91329fa0d9ca671e721f026e8e1f909060200160405180910390a25050565b606060048054806020026020016040519081016040528092919081815260200182805480156200050a57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620004eb575b5050505050905090565b600481815481106200052557600080fd5b6000918252602090912001546001600160a01b0316905081565b600154341015620005635760405163356680b760e01b815260040160405180910390fd5b60008888888888888888336040516200057c90620007b9565b6200059099989796959493929190620009e1565b604051809103906000f080158015620005ad573d6000803e3d6000fd5b50600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b03831617905560405190915033907fce7f7a585e3fa234eb3de402c2c6a7585eff379a87f9d73e3f17632ece3221a3906200064290849042908e908e908e908e908e908e908e908e9062000a59565b60405180910390a2505050505050505050565b6004548110620006a057604051630aec738560e11b815260206004820152601460248201527315dbdc9b1908191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401620002d6565b600354341015620006c45760405163356680b760e01b815260040160405180910390fd5b600060048281548110620006dc57620006dc6200094d565b60009182526020918290200154604080516315c0a24360e11b815290516001600160a01b0390921693508392632b814486926004808401938290030181865afa1580156200072e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000754919062000963565b6001600160a01b03166108fc600260035462000771919062000995565b6040518115909202916000818181858888f193505050501580156200079a573d6000803e3d6000fd5b50806001600160a01b03166108fc600260035462000444919062000995565b610ec08062000ad883390190565b600060208284031215620007da57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015620008245783516001600160a01b031683529284019291840191600101620007fd565b50909695505050505050565b60008083601f8401126200084357600080fd5b50813567ffffffffffffffff8111156200085c57600080fd5b6020830191508360208285010111156200087557600080fd5b9250929050565b6000806000806000806000806080898b0312156200089957600080fd5b883567ffffffffffffffff80821115620008b257600080fd5b620008c08c838d0162000830565b909a50985060208b0135915080821115620008da57600080fd5b620008e88c838d0162000830565b909850965060408b01359150808211156200090257600080fd5b620009108c838d0162000830565b909650945060608b01359150808211156200092a57600080fd5b50620009398b828c0162000830565b999c989b5096995094979396929594505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156200097657600080fd5b81516001600160a01b03811681146200098e57600080fd5b9392505050565b600082620009b357634e487b7160e01b600052601260045260246000fd5b500490565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60a081526000620009f760a083018b8d620009b8565b828103602084015262000a0c818a8c620009b8565b9050828103604084015262000a2381888a620009b8565b9050828103606084015262000a3a818688620009b8565b91505060018060a01b03831660808301529a9950505050505050505050565b60018060a01b038b16815289602082015260c06040820152600062000a8360c083018a8c620009b8565b828103606084015262000a9881898b620009b8565b9050828103608084015262000aaf818789620009b8565b905082810360a084015262000ac6818587620009b8565b9d9c5050505050505050505050505056fe60806040523480156200001157600080fd5b5060405162000ec038038062000ec0833981016040819052620000349162000164565b6000620000428682620002d0565b506001620000518582620002d0565b506002620000608482620002d0565b5060036200006f8382620002d0565b5042600455600580546001600160a01b0319166001600160a01b0392909216919091179055506200039c92505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000c757600080fd5b81516001600160401b0380821115620000e457620000e46200009f565b604051601f8301601f19908116603f011681019082821181831017156200010f576200010f6200009f565b816040528381526020925086838588010111156200012c57600080fd5b600091505b8382101562000150578582018301518183018401529082019062000131565b600093810190920192909252949350505050565b600080600080600060a086880312156200017d57600080fd5b85516001600160401b03808211156200019557600080fd5b620001a389838a01620000b5565b96506020880151915080821115620001ba57600080fd5b620001c889838a01620000b5565b95506040880151915080821115620001df57600080fd5b620001ed89838a01620000b5565b945060608801519150808211156200020457600080fd5b506200021388828901620000b5565b608088015190935090506001600160a01b03811681146200023357600080fd5b809150509295509295909350565b600181811c908216806200025657607f821691505b6020821081036200027757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002cb57600081815260208120601f850160051c81016020861015620002a65750805b601f850160051c820191505b81811015620002c757828155600101620002b2565b5050505b505050565b81516001600160401b03811115620002ec57620002ec6200009f565b6200030481620002fd845462000241565b846200027d565b602080601f8311600181146200033c5760008415620003235750858301515b600019600386901b1c1916600185901b178555620002c7565b600085815260208120601f198616915b828110156200036d578886015182559484019460019091019084016200034c565b50858210156200038c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610b1480620003ac6000396000f3fe6080604052600436106100c25760003560e01c80637284e4161161007f578063d8270dce11610059578063d8270dce14610237578063df630c221461024d578063e735b48a14610262578063efaa55a01461028257600080fd5b80637284e416146101ed578063bdc57eb614610202578063cdb4ae6b1461021757600080fd5b8063117a5b90146100c75780632192ed0a146101375780632b81448614610159578063313dab20146101915780634d1975b4146101b557806360104cef146101cb575b600080fd5b3480156100d357600080fd5b5061010d6100e23660046106d9565b6008602052600090815260409020805460018201546002909201546001600160a01b03909116919083565b604080516001600160a01b0390941684526020840192909252908201526060015b60405180910390f35b34801561014357600080fd5b5061014c610295565b60405161012e91906106f2565b34801561016557600080fd5b50600554610179906001600160a01b031681565b6040516001600160a01b03909116815260200161012e565b34801561019d57600080fd5b506101a760065481565b60405190815260200161012e565b3480156101c157600080fd5b506101a760075481565b3480156101d757600080fd5b506101eb6101e6366004610740565b610323565b005b3480156101f957600080fd5b5061014c6103c9565b34801561020e57600080fd5b5061014c6103d6565b34801561022357600080fd5b506101eb610232366004610762565b6103e3565b34801561024357600080fd5b506101a760045481565b34801561025957600080fd5b5061014c6104fa565b34801561026e57600080fd5b506101eb61027d3660046107b4565b610507565b6101eb6102903660046106d9565b6105aa565b600180546102a290610865565b80601f01602080910402602001604051908101604052809291908181526020018280546102ce90610865565b801561031b5780601f106102f05761010080835404028352916020019161031b565b820191906000526020600020905b8154815290600101906020018083116102fe57829003601f168201915b505050505081565b6007805460009081526008602052604080822080546001600160a01b03191633179055825482528082206001018590558254825281206002018390558154919061036c836108b5565b91905055507f7ed9b48d83e08a25a1572b27a365dfb386da7860c996e684e541e3433b79214760016007546103a191906108ce565b6040805191825233602083015281018490526060810183905260800160405180910390a15050565b600380546102a290610865565b600280546102a290610865565b60008281526008602052604090205482906001600160a01b031633146104465760405162461bcd60e51b81526020600482015260136024820152722737ba103a34329033b0b6b29036b0b9ba32b960691b60448201526064015b60405180910390fd5b60008381526008602090815260408083206001600160a01b038616845260040190915290205460ff166104b45760405162461bcd60e51b8152602060048201526016602482015275506c61796572206e6f7420696e207468652067616d6560501b604482015260640161043d565b604080518481526001600160a01b03841660208201527fb37b16260a425a6a2f954098958dc6b69c0ac58404fe84c6dde104d228523773910160405180910390a1505050565b600080546102a290610865565b6005546001600160a01b031633146105595760405162461bcd60e51b815260206004820152601560248201527413dc195c985d1a5bdb881b9bdd08185b1b1bddd959605a1b604482015260640161043d565b60036105658282610936565b507f506b34d832551ba78a10e88433d34e45760347a4201db44442d37d41d77469f0600060016002600360405161059f9493929190610a73565b60405180910390a150565b60075481106105f15760405162461bcd60e51b815260206004820152601360248201527211d85b5948191bd95cc81b9bdd08195e1a5cdd606a1b604482015260640161043d565b670de0b6b3a764000034101561063e5760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e74207374616b6560701b604482015260640161043d565b6000818152600860209081526040808320600381018054600181810183559186528486200180546001600160a01b03191633908117909155855260049091019092528220805460ff191690911790556006805434929061069f908490610acb565b9091555050604080518281523360208201527f87969bc7faf902221a147b95ceba76e011c5efb0339a0a8ee7a2bb82d9cfbbd6910161059f565b6000602082840312156106eb57600080fd5b5035919050565b600060208083528351808285015260005b8181101561071f57858101830151858201604001528201610703565b506000604082860101526040601f19601f8301168501019250505092915050565b6000806040838503121561075357600080fd5b50508035926020909101359150565b6000806040838503121561077557600080fd5b8235915060208301356001600160a01b038116811461079357600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156107c657600080fd5b813567ffffffffffffffff808211156107de57600080fd5b818401915084601f8301126107f257600080fd5b8135818111156108045761080461079e565b604051601f8201601f19908116603f0116810190838211818310171561082c5761082c61079e565b8160405282815287602084870101111561084557600080fd5b826020860160208301376000928101602001929092525095945050505050565b600181811c9082168061087957607f821691505b60208210810361089957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016108c7576108c761089f565b5060010190565b818103818111156108e1576108e161089f565b92915050565b601f82111561093157600081815260208120601f850160051c8101602086101561090e5750805b601f850160051c820191505b8181101561092d5782815560010161091a565b5050505b505050565b815167ffffffffffffffff8111156109505761095061079e565b6109648161095e8454610865565b846108e7565b602080601f83116001811461099957600084156109815750858301515b600019600386901b1c1916600185901b17855561092d565b600085815260208120601f198616915b828110156109c8578886015182559484019460019091019084016109a9565b50858210156109e65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008154610a0381610865565b808552602060018381168015610a205760018114610a3a57610a68565b60ff1985168884015283151560051b880183019550610a68565b866000528260002060005b85811015610a605781548a8201860152908301908401610a45565b890184019650505b505050505092915050565b608081526000610a8660808301876109f6565b8281036020840152610a9881876109f6565b90508281036040840152610aac81866109f6565b90508281036060840152610ac081856109f6565b979650505050505050565b808201808211156108e1576108e161089f56fea264697066735822122079e20b672c5610027be315e2b151880ab52ccda768fa188981e3d1a0f7940c8464736f6c63430008140033a26469706673582212207d98310ad139d621ef21a7fc6025632434a963d28484806130b07ddee7748acb64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "createWorld(string,string,string,string)": {
        "details": "Function to create a world",
        "params": {
          "description": "The description of the world",
          "gameMasterName": "The name of the game master",
          "gameMasterTwitterHandle": "The Twitter handle of the game master",
          "vibe": "The vibe of the world"
        }
      },
      "getWorlds()": {
        "details": "Function to get the worlds"
      },
      "joinWorldAsGM(uint256)": {
        "details": "Function for a GM to join a world",
        "params": {
          "worldIndex": "The index of the world to join"
        }
      },
      "joinWorldAsPlayer(uint256)": {
        "details": "Function for a player to join a world",
        "params": {
          "worldIndex": "The index of the world to join"
        }
      },
      "withdrawFunds()": {
        "details": "Function to withdraw the balance"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7777,
        "contract": "contracts/WorldFactory.sol:WorldFactory",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 7779,
        "contract": "contracts/WorldFactory.sol:WorldFactory",
        "label": "priceToCreate",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 7781,
        "contract": "contracts/WorldFactory.sol:WorldFactory",
        "label": "priceToJoinGM",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 7783,
        "contract": "contracts/WorldFactory.sol:WorldFactory",
        "label": "priceToJoinPlayer",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 7787,
        "contract": "contracts/WorldFactory.sol:WorldFactory",
        "label": "worlds",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_contract(World)7772)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_contract(World)7772)dyn_storage": {
        "base": "t_contract(World)7772",
        "encoding": "dynamic_array",
        "label": "contract World[]",
        "numberOfBytes": "32"
      },
      "t_contract(World)7772": {
        "encoding": "inplace",
        "label": "contract World",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}